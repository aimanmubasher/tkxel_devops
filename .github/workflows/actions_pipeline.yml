name: Terraform

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: aws

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.1

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{secrets.AWS_REGION}}" >> $GITHUB_ENV
        
        export AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}
        export AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}
        export AWS_DEFAULT_REGION=${{secrets.AWS_REGION}}

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-east-1

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./.github/workflows/

    - name: Validate Terraform
      run: terraform validate
      working-directory: ./.github/workflows/

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./.github/workflows/

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && (github.event_name == 'push' || github.event_name == 'pull_request')
      run: terraform apply --auto-approve
      working-directory: ./.github/workflows/

    - name: Create PEM file from secret
      run: |
        echo "${{ secrets.PEM_FILE_CONTENTS }}" > ./.github/workflows/devops_keypair.pem
        chmod 600 ./.github/workflows/devops_keypair.pem
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/devops_keypair

    - name: Run Ansible playbook with Inventory
      run: |
        ls
        ansible-playbook --private-key ./.github/workflows/devops_keypair.pem -i ./.github/workflows/hosts.ini ./.github/workflows/ansible_playbook.yaml
      env:
        PEM_FILE_CONTENTS: ./.github/workflows/devops_keypair.pem
        ANSIBLE_HOST_KEY_CHECKING: False
    
    # - name: Cleanup
    #   run: terraform destroy --auto-approve
    #   working-directory: ./.github/workflows/
